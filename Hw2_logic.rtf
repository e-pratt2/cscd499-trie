{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fnil\fcharset0 Monaco;
}
{\colortbl;\red255\green255\blue255;\red86\green46\blue47;\red106\green0\blue67;\red0\green0\blue178;
}
{\*\expandedcolortbl;;\cssrgb\c41569\c24314\c24314;\cssrgb\c49804\c0\c33333;\cssrgb\c0\c0\c75294;
}
\margl1440\margr1440\vieww14100\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs22 \cf0 \expnd0\expndtw0\kerning0
You have the freedom to define the parameters of the 
\f1\b helper methods
\f0\b0  that you wrote. But please do not change the parameters of the method wordsPrefixedBy().\
\'a0\
Tony\
========================logic is shown below.======\
\'a0\
LL wordsPrefixedBy(Node root, String p) \{\
\'a0\'a0\'a0\'a0\'a0\'a0 Step 1, create an empty list RET = new LL();\
\'a0\'a0\'a0\'a0\'a0\'a0 Step 2. Search down into the prefix\'a0 tree to find the tree Node (
\f1\b subRoot
\f0\b0 ) that corresponds to the string 
\f1\b p
\f0\b0 (the prefix string), if p is existing in the tree. If p is not existing in the tree, return RET immediately.\
\'a0\'a0\'a0\'a0\'a0\'a0 Step 3, call the method I attached below \'93the helper method\'94,\

\f1\b \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 printSorted(subRoot, p\cf2 , RET\cf0 );
\f0\b0 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Step 4, after you finish step3, RET is filled up.\
\'a0\'a0\'a0\'a0 \'a0\'a0\'a0Step 5, return RET;\
\}\
\'a0\
\'a0\
\pard\pardeftab720\partightenfactor0

\f2 \cf0 \'a0\'a0\'a0\'a0\'a0 \cf3 private\cf0  \cf3 void\cf0  printSorted(TrieNode \cf2 node\cf0 , String \cf2 s, LL mylist\cf0 ) \{\'a0 //the helper\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 if\cf0  (\cf2 node\cf0 .\cf4 aword\cf0 ) \{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 mylist.add(s); ///System.\cf4 out\cf0 .println(\cf2 s\cf0 );\'a0 //for example, instead of print out the word, you have to add the word s into a linkedlist object you have defined or passed in.\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 for\cf0  (Character \cf2 ch\cf0  : \cf2 node\cf0 .\cf4 children\cf0 .keySet()) \{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 printSorted(\cf2 node\cf0 .\cf4 children\cf0 .get(\cf2 ch\cf0 ), \cf2 s\cf0  + \cf2 ch\cf0 );\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}\
\'a0\'a0\'a0\'a0\'a0 \}\
\pard\pardeftab720\partightenfactor0

\f0 \cf0 \'a0}